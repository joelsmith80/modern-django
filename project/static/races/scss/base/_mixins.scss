// TRANSITION
@mixin transition($transition...) {
  // defining prefixes so we can use them in mixins below
  $prefixes:      ("-webkit-", "" );
  @each $prefix in $prefixes {
    #{$prefix}transition: $transition;
  }
}

// TRANSFORM
@mixin transform($transition...) {
  // defining prefixes so we can use them in mixins below
  $prefixes:      ("-webkit-", "" );
  @each $prefix in $prefixes {
    #{$prefix}transform: $transition;
  }
}

// CSS3 GRADIENTS
@mixin css-gradient($from: #dfdfdf, $to: #f8f8f8) {
	background-color: $to;
	background-image: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
	background-image: -webkit-linear-gradient(top, $from, $to);
	background-image: -moz-linear-gradient(top, $from, $to);
	background-image: -o-linear-gradient(top, $from, $to);
	background-image: linear-gradient(to bottom, $from, $to);
}

// CSS3 GRADIENTS
@mixin css-gradient-transparent($from: #dfdfdf, $to: #f8f8f8) {
	background-image: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
	background-image: -webkit-linear-gradient(top, $from, $to);
	background-image: -moz-linear-gradient(top, $from, $to);
	background-image: -o-linear-gradient(top, $from, $to);
	background-image: linear-gradient(to bottom, $from, $to);
}

// BOX SIZING
@mixin box-sizing($type: border-box) {
	-webkit-box-sizing: $type;
	-moz-box-sizing:    $type;
	-ms-box-sizing:     $type;
	box-sizing:         $type;
}

// a clearfix placeholder
%clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin unbold-heds() {
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

@mixin rounded($radius) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	border-radius: $radius;
}

@mixin shadow-outer($x, $y, $blur, $color) {
	-webkit-box-shadow: $x $y $blur $color;
		-moz-box-shadow: $x $y $blur $color;
			box-shadow: $x $y $blur $color;
}

@mixin shadow-inner($x, $y, $blur, $color) {
	-webkit-box-shadow: inset $x $y $blur $color;
		-moz-box-shadow: inset $x $y $blur $color;
			box-shadow: inset $x $y $blur $color;
}

@mixin columns($number){
  -webkit-column-count: $number;
  -moz-column-count: $number;
  column-count: $number;
}

@mixin column-gap($number){
  -webkit-column-gap: $number;
  -moz-column-gap: $number;
  column-gap: $number;
}

@mixin clearfix(){
  &:before {
    content: '';
    display: table;
  }
  &:after {
    clear: both;
    content: '';
    display: table;
  }
}

@mixin accessible-hide(){
  border: none;
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

// https://eager.io/blog/smarter-link-underlines/
$selectionColor: $cta;

@mixin textShadowToCropUnderline($color){
  text-shadow: .03em 0 $color, -.03em 0 $color, 0 .03em $color, 0 -.03em $color, .06em 0 $color, -.06em 0 $color, .09em 0 $color, -.09em 0 $color, .12em 0 $color, -.12em 0 $color, .15em 0 $color, -.15em 0 $color;
}

@mixin linkUnderlines($backgroundColor, $color){
  color: $color;
  text-decoration: none;
  @include textShadowToCropUnderline($backgroundColor);
  background-image: linear-gradient($backgroundColor, $backgroundColor), linear-gradient($backgroundColor, $backgroundColor), linear-gradient($color, $color);
  background-size: .05em 1px, .05em 1px, 1px 1px;
  background-repeat: no-repeat, no-repeat, repeat-x;
  background-position: 0% 90%, 100% 90%, 0% 90%;

  &::selection {
    @include textShadowToCropUnderline($selectionColor);
    background: $selectionColor;
  }

  &::-moz-selection {
    @include textShadowToCropUnderline($selectionColor);
    background: $selectionColor;
  }

  &:before, &:after, *, *:before, *:after {
    text-shadow: none;
  }

  &:visited {
    color: $color;
  }
}
